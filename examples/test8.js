/* Generated by the Nim Compiler v1.6.10 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI620757493 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555453 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI469762051 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI603979779 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI603979780 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI603979780 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI603979779, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI603979779, name: "a1", sons: null}]};
NTI603979780.node = NNI603979780;
var NNI469762051 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33555453, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33555453, name: "y", sons: null}]};
NTI469762051.node = NNI469762051;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI620757493 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI620757493.node = NNI620757493;
                      var helper_603979830 = new Uint32Array([3198944359, 3630892171]);

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557189, a_33557190, b_33557191) {
      var Temporary1;

  var result_33557192 = 0;

  BeforeRet: do {
      if (!(a_33557190 <= i_33557189)) Temporary1 = false; else {        Temporary1 = (i_33557189 <= b_33557191);      }    if (Temporary1) {
    result_33557192 = i_33557189;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557192;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function chckIndx(i_33557184, a_33557185, b_33557186) {
      var Temporary1;

  var result_33557187 = 0;

  BeforeRet: do {
      if (!(a_33557185 <= i_33557184)) Temporary1 = false; else {        Temporary1 = (i_33557184 <= b_33557186);      }    if (Temporary1) {
    result_33557187 = i_33557184;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557184, a_33557185, b_33557186);
    }
    
  } while (false);

  return result_33557187;

}

function subInt(a_33556944, b_33556945) {
        var result = a_33556944 - b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var state_603979789 = [{a0: 1773455756, a1: 4275166512}];
if (globalThis.utcInstance_822085002 === undefined) {
  globalThis.utcInstance_822085002 = [null];
}
if (globalThis.localInstance_822085003 === undefined) {
  globalThis.localInstance_822085003 = [null];
}
var objectID_1107296418 = [0];

function toFloat_33556001(i_33556002) {
  var result_33556003 = 0.0;

    result_33556003 = i_33556002;

  return result_33556003;

}

function HEX2F_33557575(x_33557576, y_33557577) {
  var result_33557578 = 0.0;

    result_33557578 = (toFloat_33556001(x_33557576) / toFloat_33556001(y_33557577));

  return result_33557578;

}

function epochTime_822086994() {
  var result_822086995 = 0.0;

    result_822086995 = HEX2F_33557575(new Date().getTime(), 1000);

  return result_822086995;

}

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_469762084 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762084 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_469762084;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_469762084 = addInt(i_469762084, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556754, a_33556755, b_33556756) {
    var Temporary1;

    if ((b_33556756 < a_33556755)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556754) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556755) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556756) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function rotl_603979807(x_603979808, k_603979809) {
  var result_603979810 = 0;

    result_603979810 = ((x_603979808 << k_603979809) | (x_603979808 >>> ((64 - k_603979809) >>> 0)));

  return result_603979810;

}

function next_603979819(r_603979820) {
  var result_603979821 = 0;

    var s0_603979822 = r_603979820.a0;
    var s1_603979823 = r_603979820.a1;
    result_603979821 = ((s0_603979822 + s1_603979823) >>> 0);
    s1_603979823 = (s1_603979823 ^ s0_603979822);
    r_603979820.a0 = ((rotl_603979807(s0_603979822, 55) ^ s1_603979823) ^ (s1_603979823 << 14));
    r_603979820.a1 = rotl_603979807(s1_603979823, 36);

  return result_603979821;

}

function skipRandomNumbers_603979828(s_603979829) {
    var s0_603979831 = 0;
    var s1_603979832 = 0;
    Label1: do {
      var i_603979841 = 0;
      var res_469762078 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469762078 <= 1)) break Label3;
            i_603979841 = res_469762078;
            Label4: do {
              var b_603979846 = 0;
              var i_469762076 = 0;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_469762076 < 64)) break Label6;
                    b_603979846 = i_469762076;
                    if (!(((helper_603979830[chckIndx(i_603979841, 0, (helper_603979830).length - 1)] & (1 << b_603979846)) == 0))) {
                    s0_603979831 = (s0_603979831 ^ s_603979829.a0);
                    s1_603979832 = (s1_603979832 ^ s_603979829.a1);
                    }
                    
                    var _ = next_603979819(s_603979829);
                    i_469762076 = addInt(i_469762076, 1);
                  }
              } while (false);
            } while (false);
            res_469762078 = addInt(res_469762078, 1);
          }
      } while (false);
    } while (false);
    s_603979829.a0 = s0_603979831;
    s_603979829.a1 = s1_603979832;

  
}

function initRand_603979995(seed_603979996) {
    var Temporary1;

  var result_603979997 = [({a0: 0, a1: 0})];

    if (!((seed_603979996 == 0))) {
    Temporary1 = seed_603979996;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_603980003 = Temporary1;
    result_603979997[0].a0 = Math.floor(seed_603980003 / Math.pow(2, 16));
    result_603979997[0].a1 = (seed_603980003 & 65535);
    skipRandomNumbers_603979828(result_603979997[0]);
    var _ = next_603979819(result_603979997[0]);

  return result_603979997[0];

}

function initRand_603980020() {
  var result_603980021 = ({a0: 0, a1: 0});

    var time_603980022 = ((epochTime_822086994() * 1000.0) & 2147483647);
    result_603980021 = nimCopy(result_603980021, initRand_603979995(time_603980022), NTI603979780);

  return result_603980021;

}

function randomize_603980027() {
    state_603979789[0] = nimCopy(state_603979789[0], initRand_603980020(), NTI603979780);

  
}
randomize_603980027();
var cnv_469762072 = document.getElementById("c8");
var ctx_469762073 = cnv_469762072.getContext('2d');

function insert_469762164(x_469762166, x_469762166_Idx, item_469762167, i_469762168) {
    var it_469762188 = ({x: 0, y: 0});
    x_469762166[x_469762166_Idx] = x_469762166[x_469762166_Idx] || []; x_469762166[x_469762166_Idx].splice(i_469762168, 0, it_469762188);
    x_469762166[x_469762166_Idx][chckIndx(i_469762168, 0, (x_469762166[x_469762166_Idx]).length - 1)] = nimCopy(x_469762166[x_469762166_Idx][chckIndx(i_469762168, 0, (x_469762166[x_469762166_Idx]).length - 1)], item_469762167, NTI469762051);

  
}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function rand_469762118(r_469762120, max_469762121) {
  var result_469762122 = 0;

  BeforeRet: do {
    if ((max_469762121 == 0)) {
    break BeforeRet;
    }
    else {
      var max_469762123 = max_469762121;
      Label1: do {
          Label2: while (true) {
          if (!true) break Label2;
            var x_469762132 = next_603979819(r_469762120);
            if ((x_469762132 <= ((4294967295 - (4294967295 % max_469762123)) ))) {
            result_469762122 = (x_469762132 % ((max_469762123 + 1) ));
            break BeforeRet;
            }
            
          }
      } while (false);
    }
    
  } while (false);

  return result_469762122;

}

function rand_469762107(r_469762109, x_469762110) {
  var result_469762111 = 0;

    if (!((x_469762110.a <= x_469762110.b))) {
    failedAssertImpl_218103864(makeNimstrLit("random.nim(325, 10) `x.a <= x.b` "));
    }
    
    result_469762111 = (((rand_469762118(r_469762109, (((x_469762110.b >>> 0) - (x_469762110.a >>> 0)) >>> 0)) + (x_469762110.a >>> 0)) >>> 0) | 0);

  return result_469762111;

}

function rand_469762099(x_469762101) {
  var result_469762102 = 0;

    result_469762102 = rand_469762107(state_603979789[0], x_469762101);

  return result_469762102;

}

function HEX2EHEX2E_956302163(a_956302166, b_956302167) {
  var result_956302168 = ({a: 0, b: 0});

    result_956302168 = nimCopy(result_956302168, {a: a_956302166, b: b_956302167}, NTI620757493);

  return result_956302168;

}

function rand_pos_469762088() {
  var result_469762089 = ({x: 0, y: 0});

    result_469762089 = nimCopy(result_469762089, {x: ((rand_469762099(HEX2EHEX2E_956302163(0, 480))) | 0), y: ((rand_469762099(HEX2EHEX2E_956302163(0, 560))) | 0)}, NTI469762051);

  return result_469762089;

}

function rand_603979880(r_603979882, max_603979883) {
  var result_603979884 = 0;

  BeforeRet: do {
    if ((max_603979883 == 0)) {
    break BeforeRet;
    }
    else {
      var max_603979885 = max_603979883;
      if ((max_603979885 == -1)) {
      result_603979884 = next_603979819(r_603979882);
      break BeforeRet;
      }
      
      Label1: do {
          Label2: while (true) {
          if (!true) break Label2;
            var x_603979898 = next_603979819(r_603979882);
            if ((x_603979898 <= ((4294967295 - (4294967295 % max_603979885)) ))) {
            result_603979884 = (x_603979898 % ((max_603979885 + 1) ));
            break BeforeRet;
            }
            
          }
      } while (false);
    }
    
  } while (false);

  return result_603979884;

}

function rand_603979876(r_603979877, max_603979878) {
  var result_603979879 = 0;

    result_603979879 = rand_603979880(r_603979877, max_603979878);

  return result_603979879;

}

function rand_603979899(max_603979900) {
  var result_603979901 = 0;

    result_603979901 = rand_603979876(state_603979789[0], chckRange(max_603979900, 0, 2147483647));

  return result_603979901;

}

function HEX3DHEX3D_469762199(x_469762201, y_469762202) {
  var result_469762203 = false;

  BeforeRet: do {
    if (!((x_469762201.x == y_469762202.x))) {
    result_469762203 = false;
    break BeforeRet;
    }
    
    if (!((x_469762201.y == y_469762202.y))) {
    result_469762203 = false;
    break BeforeRet;
    }
    
    result_469762203 = true;
    break BeforeRet;
  } while (false);

  return result_469762203;

}
var circles_469762158 = [{list: []}];
Label2: do {
  var i_469762163 = [0];
  var res_469762233 = 1;
  Label3: do {
      Label4: while (true) {
      if (!(res_469762233 <= 12)) break Label4;
        i_469762163[0] = res_469762233;
        insert_469762164(circles_469762158[0], "list", rand_pos_469762088(), 0);
        res_469762233 = addInt(res_469762233, 1);
      }
  } while (false);
} while (false);
var i_469762192 = rand_603979899(subInt((circles_469762158[0].list).length, 1));
var p_469762193 = [nimCopy(null, circles_469762158[0].list[chckIndx(i_469762192, 0, (circles_469762158[0].list).length - 1)], NTI469762051)];
var j_469762197 = rand_603979899(subInt((circles_469762158[0].list).length, 1));
var d_469762198 = [nimCopy(null, circles_469762158[0].list[chckIndx(j_469762197, 0, (circles_469762158[0].list).length - 1)], NTI469762051)];
Label5: do {
    Label6: while (true) {
    if (!HEX3DHEX3D_469762199(d_469762198[0], p_469762193[0])) break Label6;
      var j_469762212 = rand_603979899(subInt((circles_469762158[0].list).length, 1));
      d_469762198[0] = nimCopy(d_469762198[0], circles_469762158[0].list[chckIndx(j_469762212, 0, (circles_469762158[0].list).length - 1)], NTI469762051);
    }
} while (false);
var t_469762213 = [0.0];

function mouse_event_469762252(m_469762253) {
  
}

function draw_bg_469762239() {
    ctx_469762073.beginPath();
    ctx_469762073.fillStyle = 'rgb(255, 255, 255)';
    ctx_469762073.rect(0, 0, 480, 560);
    ctx_469762073.fill();

  
}

function draw_c_469762240(c_469762241) {
    ctx_469762073.beginPath();
    ctx_469762073.strokeStyle = "#ccc";
    ctx_469762073.arc(c_469762241.x, c_469762241.y, 36, 0, 2 * Math.PI);
    ctx_469762073.stroke();

  
}

function draw_p_469762242(p_469762243) {
    ctx_469762073.beginPath();
    ctx_469762073.fillStyle = 'rgb(10, 230, 80)';
    ctx_469762073.arc(p_469762243.x, p_469762243.y, 22, 0, 2 * Math.PI);
    ctx_469762073.fill();

  
}

function HEX2B_469762056(a_469762057, b_469762058) {
  var result_469762059 = ({x: 0, y: 0});

    result_469762059.x = addInt(a_469762057.x, b_469762058.x);
    result_469762059.y = addInt(a_469762057.y, b_469762058.y);

  return result_469762059;

}

function HEX2A_469762064(a_469762065, k_469762066) {
  var result_469762067 = ({x: 0, y: 0});

    result_469762067.x = (((a_469762065.x * k_469762066)) | 0);
    result_469762067.y = (((a_469762065.y * k_469762066)) | 0);

  return result_469762067;

}

function linear_469762246(a_469762247, b_469762248, t_469762249) {
  var result_469762250 = ({x: 0, y: 0});

    var t2_469762251 = (1.0 - t_469762249);
    result_469762250 = nimCopy(result_469762250, HEX2B_469762056(HEX2A_469762064(a_469762247, t2_469762251), HEX2A_469762064(b_469762248, t_469762249)), NTI469762051);

  return result_469762250;

}

function new_dest_469762254() {
    p_469762193[0] = nimCopy(p_469762193[0], d_469762198[0], NTI469762051);
    var j_469762258 = rand_603979899(subInt((circles_469762158[0].list).length, 1));
    d_469762198[0] = nimCopy(d_469762198[0], circles_469762158[0].list[chckIndx(j_469762258, 0, (circles_469762158[0].list).length - 1)], NTI469762051);
    Label1: do {
        Label2: while (true) {
        if (!HEX3DHEX3D_469762199(d_469762198[0], p_469762193[0])) break Label2;
          var j_469762266 = rand_603979899(subInt((circles_469762158[0].list).length, 1));
          d_469762198[0] = nimCopy(d_469762198[0], circles_469762158[0].list[chckIndx(j_469762266, 0, (circles_469762158[0].list).length - 1)], NTI469762051);
        }
    } while (false);

  
}

function draw_p2_469762244(p_469762245) {
    ctx_469762073.beginPath();
    ctx_469762073.fillStyle = 'rgb(240, 180, 20)';
    ctx_469762073.arc(p_469762245.x, p_469762245.y, 22, 0, 2 * Math.PI);
    ctx_469762073.fill();

  
}

function HEX2BHEX3D_469762290(x_469762292, x_469762292_Idx, y_469762293) {
    x_469762292[x_469762292_Idx] = (x_469762292[x_469762292_Idx] + y_469762293);

  
}

function animate_469762267() {
    draw_bg_469762239();
    Label1: do {
      var c_469762288 = ({x: 0, y: 0});
      var i_469762341 = 0;
      var L_469762342 = (circles_469762158[0].list).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762341 < L_469762342)) break Label3;
            c_469762288 = circles_469762158[0].list[chckIndx(i_469762341, 0, (circles_469762158[0].list).length - 1)];
            draw_c_469762240(c_469762288);
            i_469762341 = addInt(i_469762341, 1);
            if (!(((circles_469762158[0].list).length == L_469762342))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    draw_p_469762242(p_469762193[0]);
    var p2_469762289 = linear_469762246(p_469762193[0], d_469762198[0], t_469762213[0]);
    if ((1.0 < t_469762213[0])) {
    new_dest_469762254();
    t_469762213[0] = 0.0;
    }
    
    draw_p2_469762244(p2_469762289);
    HEX2BHEX3D_469762290(t_469762213, 0, 0.01);

  
}
window.addEventListener('mousedown', mouse_event_469762252);
setInterval(animate_469762267, 38);
